/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const ThrowErrorLazyRouteImport = createFileRoute('/throw-error')()
const TestErrorsLazyRouteImport = createFileRoute('/test-errors')()
const ProjectsLazyRouteImport = createFileRoute('/projects')()
const AboutLazyRouteImport = createFileRoute('/about')()
const IndexLazyRouteImport = createFileRoute('/')()

const ThrowErrorLazyRoute = ThrowErrorLazyRouteImport.update({
  id: '/throw-error',
  path: '/throw-error',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/throw-error.lazy').then((d) => d.Route))
const TestErrorsLazyRoute = TestErrorsLazyRouteImport.update({
  id: '/test-errors',
  path: '/test-errors',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/test-errors.lazy').then((d) => d.Route))
const ProjectsLazyRoute = ProjectsLazyRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/projects.lazy').then((d) => d.Route))
const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/test-errors': typeof TestErrorsLazyRoute
  '/throw-error': typeof ThrowErrorLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/test-errors': typeof TestErrorsLazyRoute
  '/throw-error': typeof ThrowErrorLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/test-errors': typeof TestErrorsLazyRoute
  '/throw-error': typeof ThrowErrorLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/projects' | '/test-errors' | '/throw-error'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/projects' | '/test-errors' | '/throw-error'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/projects'
    | '/test-errors'
    | '/throw-error'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  ProjectsLazyRoute: typeof ProjectsLazyRoute
  TestErrorsLazyRoute: typeof TestErrorsLazyRoute
  ThrowErrorLazyRoute: typeof ThrowErrorLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/throw-error': {
      id: '/throw-error'
      path: '/throw-error'
      fullPath: '/throw-error'
      preLoaderRoute: typeof ThrowErrorLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test-errors': {
      id: '/test-errors'
      path: '/test-errors'
      fullPath: '/test-errors'
      preLoaderRoute: typeof TestErrorsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  ProjectsLazyRoute: ProjectsLazyRoute,
  TestErrorsLazyRoute: TestErrorsLazyRoute,
  ThrowErrorLazyRoute: ThrowErrorLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
